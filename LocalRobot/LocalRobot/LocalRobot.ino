#include <XM430.h>
#include <SoftwareSerial.h>



int Val_X[] = {
  1356,
  1356,
  1356,
  1356,
  1356,
  1356,
  1356,
  1356,
  1356,
  1356,
  1356,
  1356,
  1356,
  1356,
  1356,
  1356,
  1356,
  1356,
  1357,
  1356,
  1356,
  1356,
  1356,
  1356,
  1357,
  1357,
  1358,
  1355,
  1347,
  1333,
  1306,
  1266,
  1188,
  1080,
  968  ,
  900 ,
  857 ,
  855 ,
  869 ,
  894 ,
  934 ,
  1024,
  1126,
  1239,
  1355,
  1421,
  1475,
  1514,
  1548,
  1598,
  1618,
  1601,
  1543,
  1463,
  1388,
  1368,
  1413,
  1450,
  1470,
  1470,
  1467,
  1467,
  1467,
  1468,
  1475,
  1482,
  1485,
  1489,
  1488,
  1489,
  1488,
  1488,
  1487,
  1488,
  1490,
  1487,
  1484,
  1484,
  1485,
  1486,
  1484,
  1479,
  1466,
  1438,
  1390,
  1295,
  1214,
  1133,
  1040,
  1002,
  1008,
  1014,
  1003,
  926 ,
  815 ,
  700 ,
  645 ,
  641 ,
  651 ,
  666 ,
  696 ,
  761 ,
  892 ,
  1017,
  1168,
  1248,
  1250,
  1252,
  1275,
  1318,
  1401,
  1485,
  1575,
  1625,
  1633,
  1634,
  1633,
  1620,
  1564,
  1482,
  1408,
  1324,
  1278,
  1265,
  1277,
  1335,
  1405,
  1478,
  1516,
  1543,
  1493,
  1406,
  1313,
  1242,
  1176,
  1125,
  1089,
  1082,
  1089,
  1107,
  1177,
  1237,
  1277,
  1318,
  1354,
  1402,
  1448,
  1491,
  1515,
  1531,
  1541,
  1544,
  1545,
  1546,
  1549,
  1555,
  1558,
  1558,
  1557,
  1554,
  1547,
  1535,
  1525,
  1518,
  1510,
  1504,
  1500,
  1493,
  1479,
  1458,
  1432,
  1410,
  1396,
  1397,
  1397,
  1401,
  1408,
  1410,
  1414,
  1419,
  1424,
  1427,
  1427,
  1423,
  1412,
  1379,
  1357,
  1341,
  1327,
  1315,
  1297,
  1275,
  1251,
  1230,
  1209,
  1190,
  1168,
  1146,
  1126,
  1105,
  1087,
  1062,
  1035,
  1002,
  973 ,
  949 ,
  936 ,
  922 ,
  901 ,
  867 ,
  824 ,
  789 ,
  771 ,
  772 ,
  780 ,
  801 ,
  836 ,
  883 ,
  937 ,
  991 ,
  1034,
  1086,
  1108,
  1131,
  1152,
  1176,
  1200,
  1221,
  1242,
  1264,
  1281,
  1299,
  1315,
  1328,
  1341,
  1355,
  1368,
  1380,
  1385,
  1385,
  1386,
  1385,
  1385,
  1385,
  1385,
  1385,
  1385,
  1384,
  1383,
  1381,
  1379,
  1376,
  1375,
  1372,
  1367,
  1360,
  1357,
  1357,
  1357,
  1357,
  1356,
  1355,
  1353,
  1352,
  1352,
  1353,
  1354,
  1355,
  1354,
  1354,
  1354,
  1354,
  1354,
  1355,
  1354,
  1355,
  1355,
  1355,
  1355,
  1354,
  1354,
  1354,
  1354,
  1355,
  1355,
  1355,
  1355,
  1355,
  1355,
  1355,
  1355,
  1354,
  1355,
  1355,
  1355
};
int Val_Y[] = {
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2326,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2327,
  2329,
  2343,
  2376,
  2431,
  2495,
  2582,
  2656,
  2749,
  2859,
  2959,
  3005,
  3004,
  2980,
  2936,
  2892,
  2808,
  2712,
  2630,
  2601,
  2627,
  2677,
  2800,
  2948,
  3046,
  3051,
  3039,
  3019,
  2988,
  2911,
  2800,
  2675,
  2568,
  2522,
  2503,
  2506,
  2508,
  2508,
  2509,
  2509,
  2509,
  2509,
  2509,
  2509,
  2509,
  2509,
  2509,
  2509,
  2509,
  2509,
  2508,
  2506,
  2502,
  2495,
  2498,
  2505,
  2508,
  2507,
  2508,
  2510,
  2510,
  2510,
  2510,
  2510,
  2510,
  2510,
  2510,
  2510,
  2510,
  2510,
  2509,
  2509,
  2510,
  2510,
  2512,
  2519,
  2536,
  2547,
  2566,
  2583,
  2590,
  2590,
  2589,
  2588,
  2588,
  2592,
  2598,
  2610,
  2631,
  2680,
  2790,
  2856,
  2912,
  2945,
  2962,
  2978,
  3006,
  3045,
  3089,
  3124,
  3141,
  3139,
  3133,
  3113,
  3073,
  3010,
  2926,
  2827,
  2720,
  2631,
  2559,
  2511,
  2483,
  2461,
  2441,
  2422,
  2406,
  2398,
  2394,
  2397,
  2406,
  2426,
  2462,
  2516,
  2583,
  2657,
  2756,
  2823,
  2884,
  2937,
  2981,
  3020,
  3052,
  3079,
  3095,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3099,
  3098,
  3098,
  3099,
  3099,
  3097,
  3088,
  3069,
  3034,
  2980,
  2915,
  2848,
  2784,
  2727,
  2680,
  2641,
  2607,
  2579,
  2555,
  2533,
  2512,
  2492,
  2474,
  2460,
  2441,
  2427,
  2418,
  2411,
  2404,
  2398,
  2395,
  2394,
  2395,
  2396,
  2396,
  2396,
  2395,
  2395,
  2395,
  2396,
  2395,
  2395,
  2395,
  2395,
  2395,
  2395,
  2395,
  2395,
  2396,
  2395,
  2395,
  2395,
  2395,
  2395,
  2395,
  2395,
  2395,
  2396,
  2395,
  2395,
  2395,
  2395,
  2396,
  2395
};

float x;
float y;
float easing = 0.05;
float easing_time = 200;

int x_Out;
int y_Out;

int numColumns = 294;



//Software Serial (RX, TX)
SoftwareSerial toRS485(11, 10);

//motorID
byte servo1 = 0x16;
byte servo2 = 0xE;

XM430 gimbal(&toRS485);

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  //Start the Serial communication: One for the Nano communication, and the other for the RS485

  gimbal.BeginRS485(1000000);
  //Enable Torque, without this function the motors will not move.
  gimbal.TorqueEnable(servo1, ON);
  gimbal.TorqueEnable(servo2, ON);

  
}

void loop() {
  x = 1350 ;
  y = 2330;


  for (int i = 0; i < numColumns; i++) {
    //eases data to write to servo
    float targetX = Val_X[i];
    float dx = targetX - x;
    x += dx * easing;
    x_Out = round(x);


    float targetY = Val_Y[i];
    float dy = targetY - y;
    y += dy * easing;
    y_Out = round(y);

    Serial.println (y_Out);
    gimbal.Goto(servo1, x_Out);
    gimbal.Goto(servo2, y_Out);
    delay(1);
  }


  int  x_diff =  Val_X[0] - Val_X[numColumns];
  int  y_diff =  Val_Y[0] - Val_Y[numColumns];

  for (int i = 0; i < easing_time; i++)
  {
    x_Out = Val_X[numColumns] + (x_diff * (i / easing_time));
    y_Out = Val_Y[numColumns] + (y_diff * (i / easing_time));
    gimbal.Goto(servo1, x_Out);
    gimbal.Goto(servo2, y_Out);
  }

  x_Out = Val_X[0];
  y_Out = Val_Y[0];


}
